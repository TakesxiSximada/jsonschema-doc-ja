# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013, Julian Berman
# This file is distributed under the same license as the jsonschema package.
# 
# Translators:
# TakesxiSximada <takesxi.sximada@gmail.com>, 2014
msgid ""
msgstr ""
"Project-Id-Version: jsonschema\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-07-13 15:11+0900\n"
"PO-Revision-Date: 2014-07-16 04:53+0000\n"
"Last-Translator: TakesxiSximada <takesxi.sximada@gmail.com>\n"
"Language-Team: Japanese (http://www.transifex.com/projects/p/jsonschema/language/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

# ffc3b7972b0b4dd19e74652a81b4c1e6
#: ../../errors.rst:3
msgid "Handling Validation Errors"
msgstr "バリデーションエラーのハンドリング"

# 4860918fd3c04d9ebb04ecda88739352
#: ../../errors.rst:7
msgid ""
"When an invalid instance is encountered, a :exc:`ValidationError` will be "
"raised or returned, depending on which method or function is used."
msgstr "無効なインスタンスが発生した場合、: exc: 'ValidationError' が発生または返されると、メソッドまたは関数を使用するに応じて。"

# 6a1d03d23c074d758b48e418915098f3
#: ../../errors.rst:12
msgid "The instance didn't properly validate under the provided schema."
msgstr "インスタンスを提供されたスキーマの下で正しく検証しなかった。"

# 1d7e5dea81d24fd29cfe21e2be8a9bc8
#: ../../errors.rst:14
msgid "The information carried by an error roughly breaks down into:"
msgstr "エラーによって伝えられる情報を大まかに分解:"

# 1c648e968a744a30835ad029b6956608
#: ../../errors.rst:17
msgid "What Happened"
msgstr "どうしましたか?"

# 99bb8bf039a64ec7866efeead2f2c083
#: ../../errors.rst:17
msgid "Why Did It Happen"
msgstr "なぜそれが発生するのでしょう?"

# 92c35278abe24dd39522b137c7de6b64
#: ../../errors.rst:17
msgid "What Was Being Validated"
msgstr "何がバリデーション対象になっているか"

# 5791d6bde333404b94b746882e725e98
#: ../../errors.rst:19
msgid ":attr:`message`"
msgstr ":attr:`message`"

# 9b168cfc5b904bafaaa6b3156db1f6da
#: ../../errors.rst:19
msgid ":attr:`context`"
msgstr ":attr:`context`"

# 9f15e464cdde4831909b6b225b0dd523
#: ../../errors.rst:21
msgid ":attr:`cause`"
msgstr ":attr:`cause`"

# 56b0237e45d44f0290761133ec6daa8f
#: ../../errors.rst:19
msgid ":attr:`instance`"
msgstr ":attr:`instance`"

# d4b4e1bbbbb44eeeb8f984a2271f805b
#: ../../errors.rst:21
msgid ":attr:`path`"
msgstr ":attr:`path`"

# 2aea126f98ee44aebbee75c9c64892bd
#: ../../errors.rst:23
msgid ":attr:`schema`"
msgstr ":attr:`schema`"

# 83a4c62d2e6c465cbf8640f9e096a377
#: ../../errors.rst:25
msgid ":attr:`schema_path`"
msgstr ":attr:`schema_path`"

# 4d1ab010634e47fd890671ce98d09ddf
#: ../../errors.rst:27
msgid ":attr:`validator`"
msgstr ":attr:`validator`"

# 72241b01dad24c43855f1b0524a0c406
#: ../../errors.rst:29
msgid ":attr:`validator_value`"
msgstr ":attr:`validator_value`"

# f34e647d8825435ab80794eec52d5206
#: ../../errors.rst:35
msgid "A human readable message explaining the error."
msgstr "人が読みやすいエラーの説明。"

# 4fb183fd013f4fec8e54be42168b4a3f
#: ../../errors.rst:39
msgid ""
"The failed `validator <http://json-schema.org/latest/json-schema-"
"validation.html#anchor12>`_."
msgstr ""

# 0c4471b5f7624198a3fe90001ce0d1af
#: ../../errors.rst:44
msgid "The value for the failed validator in the schema."
msgstr "スキーマによりバリデーションにひっかかった値。"

# 67488296075040c3af02234ccfb55760
#: ../../errors.rst:48
msgid ""
"The full schema that this error came from. This is potentially a subschema "
"from within the schema that was passed into the validator, or even an "
"entirely different schema if a :validator:`$ref` was followed."
msgstr ""

# 018a5a542fbc4e50acd170f011aa40a7
#: ../../errors.rst:54
msgid ""
"A :class:`collections.deque` containing the path to the failed validator "
"within the schema."
msgstr ":class:`collections.deque` はスキーマ内で失敗したバリデータへのパスを含んでいます。"

# d8dc73068b7c452d824d1b1cb5122060
#: ../../errors.rst:59
msgid ""
"A :class:`collections.deque` containing the path to the failed validator "
"within the schema, but always relative to the *original* schema as opposed "
"to any subschema (i.e. the one originally passed into a validator, *not* "
":attr:`schema`\\)."
msgstr ""

# ec9420a218204e3d825d677664950a69
#: ../../errors.rst:66
msgid "Same as :attr:`relative_schema_path`."
msgstr ":attr:`relative_schema_path` と同じ。"

# 48107abf9b774144bcfc131b93fe76d2
#: ../../errors.rst:70
msgid ""
"A :class:`collections.deque` containing the path to the offending element "
"within the instance. The deque can be empty if the error happened at the "
"root of the instance."
msgstr ""

# ff6fa2e358fb4da698e7431dcc9c1fd5
#: ../../errors.rst:76
msgid ""
"A :class:`collections.deque` containing the path to the offending element "
"within the instance. The absolute path is always relative to the *original* "
"instance that was validated (i.e. the one passed into a validation method, "
"*not* :attr:`instance`\\). The deque can be empty if the error happened at "
"the root of the instance."
msgstr ""

# e4e6815ba4fa44de9a260e31feb27caf
#: ../../errors.rst:85
msgid "Same as :attr:`relative_path`."
msgstr ":attr:`relative_path` と同じ.  "

# c500ff835eea4bfb8244d8f3182e7ed8
#: ../../errors.rst:89
msgid ""
"The instance that was being validated. This will differ from the instance "
"originally passed into validate if the validator was in the process of "
"validating a (possibly nested) element within the top-level instance. The "
"path within the top-level instance (i.e. :attr:`ValidationError.path`) could"
" be used to find this object, but it is provided for convenience."
msgstr ""

# b4e9510d20a1483ea755cfa7122d166e
#: ../../errors.rst:98
msgid ""
"If the error was caused by errors in subschemas, the list of errors from the"
" subschemas will be available on this property. The :attr:`.schema_path` and"
" :attr:`.path` of these errors will be relative to the parent error."
msgstr ""

# 8bd8de6490cc4a778e648a5521995e31
#: ../../errors.rst:105
msgid ""
"If the error was caused by a *non*-validation error, the exception object "
"will be here. Currently this is only used for the exception raised by a "
"failed format checker in :meth:`FormatChecker.check`."
msgstr ""

# 282997359e3e4c13a9b21ceba9c9d2f5
#: ../../errors.rst:111
msgid ""
"A validation error which this error is the :attr:`context` of. ``None`` if "
"there wasn't one."
msgstr ""

# 35ff4d5dc6734842a957c334250fdec8
#: ../../errors.rst:115
msgid ""
"In case an invalid schema itself is encountered, a :exc:`SchemaError` is "
"raised."
msgstr "無効なスキーマが検出された場合  :exc:`SchemaError` が送出されます。"

# b79caf0ee042473da4ae18cc189d09bc
#: ../../errors.rst:120
msgid "The provided schema is malformed."
msgstr "提供されたスキーマが不正な形式です。"

# 3c09e218d2174bb384e84281d4a1fde5
#: ../../errors.rst:122
msgid "The same attributes are present as for :exc:`ValidationError`\\s."
msgstr "同じアトリビュートが  :exc:`ValidationError` 用に存在しています。"

# 3572cf23dbca4985a95f1dea6f9ac5c8
#: ../../errors.rst:125
msgid "These attributes can be clarified with a short example:"
msgstr "これらのアトリビュートは短い使用例で明確に出来ます。"

# b945d8daaf684791ab094f38d0618d73
#: ../../errors.rst:141
msgid ""
"The error messages in this situation are not very helpful on their own."
msgstr "このシチュエーションでのエラーメッセージは自分自身には全く役に立ちません。"

# a8e97a4e08084e17b93a0168828e8d49
#: ../../errors.rst:148
msgid "outputs:"
msgstr "出力:"

# 1b5c57df97c64ca89af7de9f719c7bc3
#: ../../errors.rst:156
msgid ""
"If we look at :attr:`~ValidationError.path` on each of the errors, we can "
"find out which elements in the instance correspond to each of the errors. In"
" this example, :attr:`~ValidationError.path` will have only one element, "
"which will be the index in our list."
msgstr ""

# d2783bf9cffb448d96030e0c5998c151
#: ../../errors.rst:172
msgid ""
"Since our schema contained nested subschemas, it can be helpful to look at "
"the specific part of the instance and subschema that caused each of the "
"errors. This can be seen with the :attr:`~ValidationError.instance` and "
":attr:`~ValidationError.schema` attributes."
msgstr ""

# af91eb2060a549609931e1e263ec89a9
#: ../../errors.rst:177
msgid ""
"With validators like :validator:`anyOf`, the "
":attr:`~ValidationError.context` attribute can be used to see the sub-errors"
" which caused the failure. Since these errors actually came from two "
"separate subschemas, it can be helpful to look at the "
":attr:`~ValidationError.schema_path` attribute as well to see where exactly "
"in the schema each of these errors come from. In the case of sub-errors from"
" the :attr:`~ValidationError.context` attribute, this path will be relative "
"to the :attr:`~ValidationError.schema_path` of the parent error."
msgstr ""

# e31bf74eeca741c8815ffb620069b3eb
#: ../../errors.rst:200
msgid ""
"The string representation of an error combines some of these attributes for "
"easier debugging."
msgstr "エラーの文字列表現は、デバッグを容易にこれらの属性のいくつかを兼ね備えています。"

# bfa6e8c96e9548a2a8463480de3cb453
#: ../../errors.rst:220
msgid "ErrorTrees"
msgstr "エラーツリー"

# c77cade088a84a5383a56b490ff3808c
#: ../../errors.rst:222
msgid ""
"If you want to programmatically be able to query which properties or "
"validators failed when validating a given instance, you probably will want "
"to do so using :class:`ErrorTree` objects."
msgstr "インスタンスの検証時にプロパティや失敗したバリデータを問い合わせるようにプログラミングしたいなら、おそらく :class:`ErrorTree`  を使ってみたくなると思います。"

# f7f2fd2882fb4eb0a24ef7b17a9f0649
#: ../../../jsonschema/exceptions.pydocstring of
#: jsonschema.validators.ErrorTree:1
msgid "ErrorTrees make it easier to check which validations failed."
msgstr "ErrorTrees ではどの検証が失敗したを確認するのが容易になりました。"

# 583ca8f0ee7c40ec9b95fabef93512c3
#: ../../errors.rst:233
msgid ""
"The mapping of validator names to the error objects (usually "
":class:`ValidationError`\\s) at this level of the tree."
msgstr ""

# 99f721acbd1241ccbd34aa0be069462d
#: ../../../jsonschema/exceptions.pydocstring of
#: jsonschema.validators.ErrorTree.__contains__:1
msgid "Check whether ``instance[index]`` has any errors."
msgstr "``instance[index]`` がエラーかどうかを確認してください。"

# 9c6f0617420a4aefaa81680e063b2eba
#: ../../../jsonschema/exceptions.pydocstring of
#: jsonschema.validators.ErrorTree.__getitem__:1
msgid "Retrieve the child tree one level down at the given ``index``."
msgstr "\"index\" で指定された一階層下の子ツリーを取得します。"

# 0cbcee5ceb0a424b95dd4c7df615b18a
#: ../../../jsonschema/exceptions.pydocstring of
#: jsonschema.validators.ErrorTree.__getitem__:3
msgid ""
"If the index is not in the instance that this tree corresponds to and is not"
" known by this tree, whatever error would be raised by "
"``instance.__getitem__`` will be propagated (usually this is some subclass "
"of :class:`LookupError`."
msgstr ""

# 12136c6885f24b0f9130a62f101205bf
#: ../../../jsonschema/exceptions.pydocstring of
#: jsonschema.validators.ErrorTree.__iter__:1
msgid ""
"Iterate (non-recursively) over the indices in the instance with errors."
msgstr "エラーが発生したインスタンスのインデックスをイテレート(ただし再帰的にではない)します。"

# 9f459c03421144b88b78f7839e1cfb10
#: ../../../jsonschema/exceptions.pydocstring of
#: jsonschema.validators.ErrorTree.__len__:1
msgid "Same as :attr:`total_errors`."
msgstr ":attr:`total_errors` と同じです."

# 637abae07aa9444d891b84e5f9c6b252
#: ../../../jsonschema/exceptions.pydocstring of
#: jsonschema.validators.ErrorTree.total_errors:1
msgid "The total number of errors in the entire tree, including children."
msgstr "子要素を含むエラーツリー全体の総数です。"

# a5f06e225b034670b5429865b8497374
#: ../../errors.rst:236
msgid "Consider the following example:"
msgstr "次の例を考えてみます。"

# 60ec9b172036493b84e26fe3686e5059
#: ../../errors.rst:247
msgid ""
"For clarity's sake, the given instance has three errors under this schema:"
msgstr "明快さのために、特定のインスタンスはこのスキーマの下で 3 つのエラーがあります。"

# ef7a9bb1e9374ac992ef990f19ab1852
#: ../../errors.rst:261
msgid ""
"Let's construct an :class:`ErrorTree` so that we can query the errors a bit "
"more easily than by just iterating over the error objects."
msgstr ""

# e818f18074de4bcc9004c5113e2d4d13
#: ../../errors.rst:268
msgid ""
"As you can see, :class:`ErrorTree` takes an iterable of "
":class:`ValidationError`\\s when constructing a tree so you can directly "
"pass it the return value of a validator's :attr:`~IValidator.iter_errors` "
"method."
msgstr ""

# ddf36d884c9c42b89d829ebc709cb2e8
#: ../../errors.rst:272
msgid ""
":class:`ErrorTree`\\s support a number of useful operations. The first one "
"we might want to perform is to check whether a given element in our instance"
" failed validation. We do so using the :keyword:`in` operator:"
msgstr ""

# 384819dfc8af46deade01adfe3f7043d
#: ../../errors.rst:284
msgid ""
"The interpretation here is that the 0th index into the instance "
"(``\"spam\"``) did have an error (in fact it had 2), while the 1th index "
"(``2``) did not (i.e. it was valid)."
msgstr ""

# 69e6c8e914ed4babb8cbaaaca07ed272
#: ../../errors.rst:288
msgid ""
"If we want to see which errors a child had, we index into the tree and look "
"at the :attr:`~ErrorTree.errors` attribute."
msgstr ""

# ed79609ab9164b5e822e4090262cc313
#: ../../errors.rst:296
msgid ""
"Here we see that the :validator:`enum` and :validator:`type` validators "
"failed for index ``0``. In fact :attr:`~ErrorTree.errors` is a dict, whose "
"values are the :class:`ValidationError`\\s, so we can get at those directly "
"if we want them."
msgstr ""

# 74226df0b0d14befae92f541b8046278
#: ../../errors.rst:306
msgid ""
"Of course this means that if we want to know if a given validator failed for"
" a given index, we check for its presence in :attr:`~ErrorTree.errors`:"
msgstr ""

# 99ab3bd739894cfebd58b1c38419e4b0
#: ../../errors.rst:317
msgid ""
"Finally, if you were paying close enough attention, you'll notice that we "
"haven't seen our :validator:`minItems` error appear anywhere yet. This is "
"because :validator:`minItems` is an error that applies globally to the "
"instance itself. So it appears in the root node of the tree."
msgstr ""

# 3090bcc23eeb4fd596a606c19591ab8b
#: ../../errors.rst:327
msgid "That's all you need to know to use error trees."
msgstr "エラーのツリーを扱うために知っておくべき全てです。"

# fc2a1c61a65b434a9d305bc7d6432527
#: ../../errors.rst:329
msgid ""
"To summarize, each tree contains child trees that can be accessed by "
"indexing the tree to get the corresponding child tree for a given index into"
" the instance. Each tree and child has a :attr:`~ErrorTree.errors` "
"attribute, a dict, that maps the failed validator to the corresponding "
"validation error."
msgstr ""

# 07e7fdb281184abba0083ae73fdb3de4
#: ../../errors.rst:336
msgid "best_match and relevance"
msgstr "best_match と関連性"

# b8f04410ea9f47939a9f30d5a0190986
#: ../../errors.rst:338
msgid ""
"The :func:`best_match` function is a simple but useful function for "
"attempting to guess the most relevant error in a given bunch."
msgstr ""

# 2534db8fa3b84591af30fbaf2fcd00fa
#: ../../errors.rst:356
msgid ""
"Try to find an error that appears to be the best match among given errors."
msgstr "与えられた誤差の内一番マッチすると思われるエラーを検索します。"

# c63143aaadbb402e9d6d7c38173931cf
#: ../../errors.rst:358
msgid ""
"In general, errors that are higher up in the instance (i.e. for which "
":attr:`ValidationError.path` is shorter) are considered better matches, "
"since they indicate \"more\" is wrong with the instance."
msgstr ""

# e2290f41ee7d4cfb8fdacf906a8a0d04
#: ../../errors.rst:362
msgid ""
"If the resulting match is either :validator:`oneOf` or :validator:`anyOf`, "
"the *opposite* assumption is made -- i.e. the deepest error is picked, since"
" these validators only need to match once, and any other errors may not be "
"relevant."
msgstr ""

# 8146ac95eddb46299d18e06cfa42b99a
#: ../../errors.rst:367
msgid ""
"the errors to select from. Do not provide a mixture of errors from different"
" validation attempts (i.e. from different instances or schemas), since it "
"won't produce sensical output."
msgstr ""

# d32af335e90d4b37896dce6691347eb8
#: ../../errors.rst:371
msgid ""
"the key to use when sorting errors. See :attr:`relevance` and transitively "
":func:`by_relevance` for more details (the default is to sort with the "
"defaults of that function). Changing the default is only useful if you want "
"to change the function that rates errors but still want the error context "
"decension done by this function."
msgstr ""

# 108b4bec6add47ed915d13ec249c98b2
#: ../../errors.rst:377
msgid "the best matching error, or ``None`` if the iterable was empty"
msgstr "一番マッチしたエラーか、またはイテレータが空の時は  ``None`` "

# 5fd0a50fdfb5427e8d17ce99870a851c
#: ../../errors.rst:381
msgid ""
"This function is a heuristic. Its return value may change for a given set of"
" inputs from version to version if better heuristics are added."
msgstr ""

# 17f9c98305ff4229a6f988a57d77cebe
#: ../../errors.rst:387
msgid "A key function that sorts errors based on heuristic relevance."
msgstr "ヒューリスティックな関連性に基づいてエラーをソートできるkey関数です。"

# 54aca4744bd74114af7286f4a1826694
#: ../../errors.rst:389
msgid ""
"If you want to sort a bunch of errors entirely, you can use this function to"
" do so. Using this function as a key to e.g. :func:`sorted` or :func:`max` "
"will cause more relevant errors to be considered greater than less relevant "
"ones."
msgstr ""

# 2e3c45afd9c04df0b34bbf2bf9a60dca
#: ../../errors.rst:394
msgid ""
"Within the different validators that can fail, this function considers "
":validator:`anyOf` and :validator:`oneOf` to be *weak* validation errors, "
"and will sort them lower than other validators at the same level in the "
"instance."
msgstr ""

# 78750c50c534401181449c76e8403c26
#: ../../errors.rst:399
msgid ""
"If you want to change the set of weak [or strong] validators you can create "
"a custom version of this function with :func:`by_relevance` and provide a "
"different set of each."
msgstr ""

# 2abac061c8e343a7b2484fc1e551e27a
#: ../../errors.rst:426
msgid "Create a key function that can be used to sort errors by relevance."
msgstr "関連度順にエラーをソートするために使用できるkey関数を作成します。"

# 9d6d36a9de344c13a7b0f605cf096dc2
#: ../../errors.rst:428
msgid ""
"a collection of validators to consider to be \"weak\". If there are two "
"errors at the same level of the instance and one is in the set of weak "
"validators, the other error will take priority. By default, "
":validator:`anyOf` and :validator:`oneOf` are considered weak validators and"
" will be superceded by other same-level validation errors."
msgstr ""

# d381ca82ce8240a292d5c8f0529cf22e
#: ../../errors.rst:434
msgid "a collection of validators to consider to be \"strong\""
msgstr "「strong」であると考慮すべきバリデータのコレクション"
